%YAML 1.2
---
name: shard
file_extensions: [s, shd, shard]
scope: source.s

contexts:
  main:
    - match: '\b(ret|loop|break|continue)\b'
      scope: keyword.control

    - match: //.*$
      scope: comment

    - match: '\/\*'
      push: comment_block

    - match: '\bmod|if|use|fn|pub|let|enum|trait|export|impl|struct|extern|type\b'
      scope: keyword.other

    - match: '\bcopy|move\b'
      scope: keyword.move

    - match: '&mut|\*mut|mut|opt'
      scope: keyword.attribute

    - match: '\b(->|->>)\b'
      scope: op.thread

    - match: '\{|\}|\(|\)|\|'
      scope: syntax.separator

    - match: '\*|\/|%|-|\+|<|>'
      scope: op.arithmetic

    - match: '\b>>|<<|~|&|\||\^\b'
      scope: op.bitwise

    - match: '!=|=='
      scope: op.logic

    - match: '&|\*'
      scope: op.ref

    - match: '\b\?\b'
      scope: op.special

    - match: ';|:'
      scope: syntax.separator

    - match: ([A-Z][a-z]+(?:[A-Z][a-z]+)*)
      scope: entity.type.named

    - match: 'usize|isize|u\d+|b\d+|i\d+'
      scope: entity.type

    - match: '\b[A-Z]\b'
      scope: entity.type.generic

    - match: '\[|\]'
      scope: op.brackets

    # - match: '([a-zA-Z_]\w*)?(::)(?=<)|(?<=>)\s*(?=\()|([a-zA-Z_]\w*)\s*(?=\()'
    - match: '\b([a-zA-Z_]\w*)(?=\s*<|\s*\(|::)'
      scope: entity.function

    - match: \b[0-9]+\.[0-9]+\b
      scope: literal.float

    - match: \b[0-9]+\b
      scope: literal.integer

    - match: "'"
      push: char

    - match: '"'
      push: string

  comment_block:
    - meta_scope: comment
    - match: '\*\/'
      pop: true

  string:
    - meta_scope: literal.string
    - match: '"'
      pop: true

  char:
    - meta_scope: literal.char
    - match: "'"
      pop: true

